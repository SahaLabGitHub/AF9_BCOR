#!/bin/csh
#

# Generated by CHARMM-GUI (http://www.charmm-gui.org) v3.7
#
# This folder contains GROMACS formatted CHARMM36 force fields, a pre-optimized PDB structure, and GROMACS inputs.
# All input files were optimized for GROMACS 2019.2 or above, so lower version of GROMACS can cause some errors.
# We adopted the Verlet cut-off scheme for all minimization, equilibration, and production steps because it is
# faster and more accurate than the group scheme. If you have a trouble with a performance of Verlet scheme while
# running parallelized simulation, you should check if you are using appropriate command line.
# For MPI parallelizing, we recommand following command:
# mpirun -np $NUM_CPU gmx mdrun -ntomp 1




set init = step3_input
set mini_prefix = step4.0_minimization
set equi_prefix = step4.1_equilibration
set prod_prefix = step5_production
set prod_step   = step5
set num_rep = 44
set gmx_mpi = '/path/to/your/gmx_mpi'
set rep_ladder = ( 303.15 305.19 307.23 309.29 311.36 313.45 315.54 317.64 319.76 321.88 324.02 326.17 328.33 330.51 332.69 334.89 337.1 339.32 341.55 343.79 346.05 348.32 350.6 352.89 355.2 357.52 359.85 362.19 364.55 366.92 369.31 371.7 374.11 376.54 378.98 381.42 383.89 386.36 388.85 391.35 393.87 396.4 398.94 400 )


set dirs = `seq ${num_rep}`
set i = 1
while (${i} <= ${num_rep})
    mkdir ${i}
    sed "s/#temp/${rep_ladder[${i}]}/g" ${prod_prefix}.mdp > ${i}/${prod_prefix}.mdp
    @ i += 1
end
